{{!-- Elements that exist deep within the document tree are given an implicitly lower z-index
      value than elements that aren't as deep in the tree; this has the effect of hiding our
      ember-popper behind less-nested elements. Due to the way z-indexing works, we cannot simply
      add a higher z-index value to our ember-popper. To avoid this issue, we render the element
      on the document body, giving it the highest default z-index value. --}}
{{#if this.renderInPlace}}
  {{!-- Add a wrapper around the yielded block so we have something for the Popper to target --}}
  <div id={{@id}} hidden={{this.hidden}} role={{@ariaRole}}
       {{did-insert this.didInsertPopperElement}}
       {{will-destroy this.willDestroyPopperElement}}
       {{did-update this.didUpdatePopperSettings @eventsEnabled @modifiers @onCreate @onUpdate @placement @popperTarget @renderInPlace}}
       ...attributes>
    {{yield (hash
      disableEventListeners=this.disableEventListeners
      enableEventListeners=this.enableEventListeners
      scheduleUpdate=this.scheduleUpdate
      update=this.update
    )}}
  </div>
{{else}}
  {{#in-element this._popperContainer insertBefore=null}}
    <div id={{@id}} hidden={{this.hidden}} role={{@ariaRole}}
         {{did-insert this.didInsertPopperElement}}
         {{will-destroy this.willDestroyPopperElement}}
         {{did-update this.didUpdatePopperSettings @eventsEnabled @modifiers @onCreate @onUpdate @placement @popperTarget @renderInPlace}}
         ...attributes>
      {{yield (hash
        disableEventListeners=this.disableEventListeners
        enableEventListeners=this.enableEventListeners
        scheduleUpdate=this.scheduleUpdate
        update=this.update
      )}}
    </div>
  {{/in-element}}
{{/if}}
